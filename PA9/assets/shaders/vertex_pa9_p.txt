#version 330

          
          layout (location = 0) in vec3 v_position; 
          layout (location = 1) in vec3 v_norm; 
          layout (location = 2) in vec2 v_coord;
          
          varying vec2 coord; 
          //out vec3 color;

          out vec3 qL;
          out vec3 qH;
          out vec3 qN;

          uniform mat4 projectionMatrix; 
          uniform mat4 viewMatrix;
          uniform mat4 modelMatrix; 
          
          uniform vec4 light_position;
          uniform float material_shininess;

          void main(void) 
          { 
            vec4 v = vec4(v_position, 1.0); 
            gl_Position = (projectionMatrix * viewMatrix * modelMatrix) * v; 
            coord = v_coord; 
	    //color = v_color;

            vec3 L = normalize( light_position.xyz - v_position );
            qL = L;
            vec3 E = normalize( -v_position );
            qH = normalize( L + E );
            qN = -normalize( ((viewMatrix * modelMatrix) * vec4(v_norm,0.0)).xyz );
            
          } 
